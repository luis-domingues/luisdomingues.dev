---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import { formatDate } from "../../utils/format-date";

interface Props {
    post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
    const posts = await getCollection("blog");

    const shouldIncludeDrafts = process.env.NODE_ENV === "development";

    return posts
        .filter((post: { data: { draft: any } }) =>
            shouldIncludeDrafts ? post : !post.data.draft,
        )
        .map((post: { slug: any }) => ({
            params: {
                slug: post.slug,
            },
            props: {
                post,
            },
        }));
}

const { data, render } = Astro.props.post;
const { Content } = await render();
---

<Layout title={data.title!}>
    <article class="my-16 h-full md:text-sm">
        <header>
            <h1 class="mx-4 text-xl md:text-2xl">{data.title}</h1>
            {data.draft ? <p>rascunho</p> : ""}
            <p>{formatDate(data.pubDate)}</p>
        </header>

        <Content />
    </article>
</Layout>

<style is:global>
    article pre {
        padding: 6px 12px;
        border-radius: 6px;
    }

    article code:not(pre code) {
        border-radius: 6px;
        padding: 2px 6px;
        background-color: rgb(194, 194, 194);
    }

    article h2 {
        font-size: 28px;
        padding-top: 8px;
    }

    article h3 {
        font-size: 24px;
        padding-top: 4px;
    }

    article h4,
    article h5,
    article h6 {
        color: #374151;
        padding-top: 4px;
    }

    article ul {
        list-style-type: disc;
        list-style-position: inside;
    }

    article a {
        text-decoration: underline;
        color: rgb(91, 33, 182);
    }

    article a:visited {
        color: rgb(7, 89, 133);
    }
</style>
